generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id                 Int        @id @default(autoincrement())
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  name               String
  email              String     @unique
  role               String     @default("user")
  password           String
  passwordResetToken String?
  photoUrl           String?
  reviews            Review[]
  institution        String?
  age                Int?
  gender             String?

  UserExperiment UserExperiment[]
}

model Experiment {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String
  description    String
  photoUrl       String
  reviews        Review[]
  slug           String           @unique
  remuneration   Float
  startDate      DateTime?
  endDate        DateTime?
  UserExperiment UserExperiment[]
}

model UserExperiment {
  id           Int        @id @default(autoincrement())
  userId       Int
  experimentId Int
  user         User       @relation(fields: [userId], references: [id])
  experiment   Experiment @relation(fields: [experimentId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  isDone       Boolean    @default(false)
  deviceInfo  Json?
  expData      Json?

  @@unique([userId, experimentId])
}


model Review {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  rating       Int
  content      String
  verified     Boolean    @default(false)
  experimentId Int
  authorId     Int
  experiment   Experiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  author       User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
}
